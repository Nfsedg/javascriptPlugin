{"version":3,"sources":["ejercicios/typescript/index.ts"],"names":[],"mappings":"AAAA;AACA,IAAI,KAAK,GAAY,IAArB;AACA,KAAK,GAAG,KAAR,EAEA;;AAEA,IAAI,GAAG,GAAG,CAAV;AACA,IAAI,SAAS,GAAW,EAAxB;AACA,IAAI,WAAW,GAAW,GAA1B;AACA,IAAI,MAAM,GAAG,SAAS,GAAG,WAAzB,EAEA;;AAEA,IAAI,MAAM,GAAW,SAArB;AACA,IAAI,MAAM,GAAG,cAAY,MAAzB,EAEA;;AACA,IAAI,MAAM,GAAa,EAAvB;AACA,MAAM,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,CAAT,EACA;;AAEA,IAAI,eAAe,GAA6B,EAAhD;AACA,eAAe,CAAC,IAAhB,CAAqB,QAArB;AACA,eAAe,CAAC,IAAhB,CAAqB,GAArB,GAEA;;AACA,IAAK,KAAL;;AAAA,CAAA,UAAK,KAAL,EAAU;AACN,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACA,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACH,CAJD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAMA,IAAI,aAAa,GAAU,KAAK,CAAC,KAAjC;AACA,OAAO,CAAC,GAAR,CAAY,0BAAwB,aAApC,GAEA;;AACA,IAAI,OAAO,GAAQ,OAAnB;AACA,OAAO,GAAG;AAAE,EAAA,IAAI,EAAE;AAAR,CAAV,EAEA;;AACA,IAAI,UAAU,GAAW;AAAE,EAAA,IAAI,EAAE;AAAR,CAAzB,EAGA;;AACA,SAAS,GAAT,CAAa,CAAb,EAAwB,CAAxB,EAAgC;AAC5B,SAAO,CAAC,GAAG,CAAX;AACH;;AACD,IAAM,GAAG,GAAG,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf;;AAEA,SAAS,WAAT,CAAsB,CAAtB,EAA+B;AAC3B,SAAO,UAAU,CAAV,EAAmB;AACtB,WAAO,CAAC,GAAG,CAAX;AACH,GAFD;AAGH;;AAED,IAAM,MAAM,GAAG,WAAW,CAAC,CAAD,CAA1B;AACA,IAAM,QAAQ,GAAG,MAAM,CAAC,CAAD,CAAvB;;AAEA,SAAS,QAAT,CAAkB,SAAlB,EAAqC,QAArC,EAA+D;AAA1B,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,OAAA;AAA0B;;AAC3D,SAAU,SAAS,GAAA,GAAT,GAAa,QAAvB;AACH;;AAED,IAAM,QAAQ,GAAG,QAAQ,CAAC,SAAD,CAAzB;AAEA,OAAO,CAAC,GAAR,CAAY,QAAZ,GAEA;;AACA,CAAA,UAAK,KAAL,EAAU;AACN,EAAA,KAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACA,EAAA,KAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AACH,CAHD,EAAK,KAAK,KAAL,KAAK,GAAA,EAAA,CAAV;;AAWA,IAAI,IAAI,GAAc;AAClB,EAAA,KAAK,EAAE,CADW;AAElB,EAAA,KAAK,EAAE,CAFW,CAGlB;;AAHkB,CAAtB;;AAMA,SAAS,IAAT,CAAc,CAAd,EAA0B;AACtB,SAAO,CAAC,CAAC,KAAF,GAAU,CAAC,CAAC,KAAnB;AACH;;AAED,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAD,CAArB;AACA,OAAO,CAAC,GAAR,CAAY,QAAZ;;AAEA,IAAI,CAAC,QAAL,GAAgB,YAAA;AACZ,SAAO,KAAK,KAAL,GAAa,mBAAiB,KAAK,KAAnC,GAA6C,eAApD;AACH,CAFD;;AAIA,OAAO,CAAC,GAAR,CAAY,IAAI,CAAC,QAAL,EAAZ","file":"typescript.72c601f0.js","sourceRoot":"..","sourcesContent":["//Boolean\nlet muted: boolean = true;\nmuted = false\n\n// Numeros\n\nlet age = 6;\nlet numerador: number = 42;\nlet denominador: number = age;\nlet result = numerador / denominador;\n\n// String\n\nlet nombre: string = 'Richard';\nlet saludo = `Namae wa ${nombre}`\n\n//Arrays  Arreglos\nlet people: string[] = []\npeople = [\"Isabel\", \"Nicole\", \"Raul\"]\n// people.push(9000)\n\nlet peopleAndNumber: Array< string | number > = []\npeopleAndNumber.push('Nombre')\npeopleAndNumber.push(950)\n\n// Enum de Enumeracion\nenum Color {\n    Rojo = \"Rojo\",\n    Verde = \"Verde\",\n    Azul = \"Azul\"\n}\n\nlet colorFavorito: Color = Color.Verde\nconsole.log(`Mi color favorito es ${colorFavorito}`)\n\n//Any\nlet comodin: any = \"Joker\";\ncomodin = { type: 'Wildcard' }\n\n//Object\nlet someObject: object = { type: 'Wildcard' }\n\n\n//Funciones\nfunction add(a: number, b:number): number {\n    return a + b;\n}\nconst sum = add(5, 6)\n\nfunction createAdder (a: number): (number) => number {\n    return function (b: number) {\n        return b + a;\n    }\n}\n\nconst addFor = createAdder(5)\nconst forPlus6 = addFor(4)\n\nfunction fullName(firstName: string, lastName: string = 'Smith'): string {\n    return `${firstName} ${lastName}`\n}\n\nconst richard2 = fullName('Richard');\n\nconsole.log(richard2)\n\n//Interfaces\nenum Color {\n    rojo = 'Rojo',\n    verde = 'Verde'\n}\n\ninterface Rectagulo {\n    ancho: number\n    heigh: number\n    color?: Color\n}\n\nlet rect: Rectagulo = {\n    ancho: 4,\n    heigh: 6,\n    // color: Color.Rojo, \n};\n\nfunction area(r: Rectagulo): number {\n    return r.ancho * r.heigh;\n}\n\nconst areaRect = area(rect)\nconsole.log(areaRect);\n\nrect.toString = function() {\n    return this.color ? `Un rectangulo ${this.color}` : `Un rectangulo`;\n}\n\nconsole.log(rect.toString())"]}